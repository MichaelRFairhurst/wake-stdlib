module lang;
#>
# Source Code for the Original Compiler for the
# Programming Language Wake
#
# Primitives.wk
#
# Licensed under the MIT license
# See LICENSE.TXT for details
#
# Author: Michael Fairhurst
# Revised By:
#
##

extern Bool is:

	Text -- toText();

extern Num is:

	Num -- floor();
	Num -- ceil();
	Num -- round();
	Num -- squared();
	Num -- abs();

	Num -- orMaxOf(Num);
	Num -- orMaxOf(Num[]);

	Num -- orMinOf(Num);
	Num -- orMinOf(Num[]);

	Num -- numberOfDigits();

	Text -- toText();

	Bool -- isWithin(Num)Of(Num);

extern Int is:

	Int -- squared();
	Int -- abs();

	Int -- orMaxOf(Int);
	Int -- orMaxOf(Int[]);

	Int -- orMinOf(Int);
	Int -- orMinOf(Int[]);

	Int -- numberOfDigits();

	Text -- toText();

	Int[] -- range(Int);
	times(fn() whatToDo);

	Char -- fromAsciiCode();

extern Text is:

	Text -- toUpper();
	Text -- toLower();
	Text -- switchCase();

	Text -- trim();

	Int -- getSize();

	Text -- substr(Int start);
	Text -- substr(Int start, Int end);

	Num? -- parseNum();
	Int? -- parseInt();

	Char? -- charAt(Int);
	Char[] -- toCharArray();

	Text[] -- split(Text);
	Text[] -- split(Char);

	Int? -- indexOf(Text);
	Int? -- indexOf(Char);

	Text -- join(Text[]);

extern Char is:

	Char -- toUpper();
	Char -- toLower();
	Bool -- isUpper();
	Bool -- isLower();
	Bool -- isAlpha();
	Bool -- isDigit();
	Int -- toAsciiCode();

	Text -- toText();
	Text -- join(Text[]);
