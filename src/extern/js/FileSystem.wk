import FilePath;

every FileSystem is:

	#> need {{classname:blah}} or the ability to mix wake code with js code or the ability to generate needs (and need a FilePath provider)
	@CustomJavascript(
	FilePath -- getPath(Text);

	@CustomJavascript("throw new Error('ListRoots is not implement yet. Help a fella out!')")
	FilePath[] -- listRoots();

	@CustomJavascript("return ':';")
	Text -- getPathSeparator();

	// Need {{propertyname:blah}} or to js-ify 'this'
	@CustomJavascript("return this.`getPath(Text)`(c.`getPath()` + this.`getPathSeparator()`() + a + (+new$ Date()) + Math.rand() + b);
	FilePath -- getTempFile(Text prefix, Text suffix, FilePath);

	~FileSystem~ = function$ ~FileSystem~() {

		this.`getPath(Text)` = function(a) {
			return$ new$ ~FilePath~(a);
		};

		this.`listRoots()` = function() {
			throw$ Error("listRoots$ is$ not$ implemented$ yet.$ Help$ a$ fella$ out!");
		};

		this.`getPathSeparator()` = function() {
			return$ '/';
		};

		this.`getTempFile(Text prefix, Text suffix, FilePath)` = function(a, b, c) {
			return$ this.`getPath(Text)`(c.`getPath()` + this.`getPathSeparator()`() + a + (+new$ Date()) + Math.rand() + b);
		};

	};
	##
